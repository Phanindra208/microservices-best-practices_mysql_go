// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "microservice API",
    "title": "microservice API",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/commonstudents": {
      "get": {
        "description": "Get Common Students",
        "tags": [
          "student"
        ],
        "summary": "Get Common Students",
        "operationId": "Get_Common_Students",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "teacher_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Common Students",
            "schema": {
              "$ref": "#/definitions/common_students"
            }
          },
          "400": {
            "description": "Bad request \u003cbr\u003e\n",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/liveness": {
      "get": {
        "tags": [
          "Health"
        ],
        "operationId": "Liveness",
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/readiness": {
      "get": {
        "tags": [
          "Health"
        ],
        "operationId": "Readiness",
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/register": {
      "post": {
        "description": "create Register",
        "tags": [
          "student"
        ],
        "summary": "register student",
        "operationId": "Create_Register",
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/register"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad request \u003cbr\u003e\n",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/retrievefornotifications": {
      "post": {
        "description": "retrieve_for_notifications",
        "tags": [
          "teacher"
        ],
        "summary": "Retrieve For Notifications",
        "operationId": "retrieve_for_notifications",
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/retrieve_for_notifications"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve For Notifications",
            "schema": {
              "$ref": "#/definitions/recipients"
            }
          },
          "400": {
            "description": "Bad request \u003cbr\u003e\n",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/suspend": {
      "post": {
        "description": "suspend_student",
        "tags": [
          "teacher"
        ],
        "summary": "Suspend Student(s)",
        "operationId": "suspend_student",
        "parameters": [
          {
            "type": "string",
            "name": "teacher_id",
            "in": "query"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/suspend_students"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad request \u003cbr\u003e\n",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorResponse": {
      "description": "Error response body for 4xx responses",
      "properties": {
        "code": {
          "description": "6xx if validation error.\n1000+ for special errors.\nOtherwise, normal HTTP status codes apply.\n",
          "type": "integer",
          "x-order": 0
        },
        "message": {
          "description": "Informative text - not for error checking",
          "type": "string",
          "x-order": 1
        },
        "validation": {
          "description": "Details about validation error",
          "type": "object",
          "properties": {
            "code": {
              "description": "Error code for validation error - like error_code",
              "type": "string",
              "x-order": 1
            },
            "param": {
              "description": "The parameter name which caused the error",
              "type": "string",
              "x-order": 0
            }
          },
          "x-order": 2
        }
      }
    },
    "common_students": {
      "description": "Register Student",
      "type": "object",
      "properties": {
        "students": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/student"
          },
          "x-order": 0
        }
      },
      "x-go-package": "github.com/iAmPlus/hotels/models"
    },
    "pagestate": {
      "type": "object",
      "properties": {
        "pageid": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "PageID",
          "x-order": 0
        },
        "pagesize": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "PageSize",
          "x-order": 1
        }
      },
      "x-go-name": "PageState"
    },
    "pagination_data": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Page",
          "x-order": 0
        },
        "perPage": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "PerPage",
          "x-order": 1
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Total",
          "x-order": 2
        },
        "totalPage": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "TotalPage",
          "x-order": 3
        }
      },
      "x-go-package": "github.com/iAmPlus/skill-news-go/common"
    },
    "recipients": {
      "description": "Recipients",
      "type": "object",
      "properties": {
        "students": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/student"
          },
          "x-order": 0
        }
      },
      "x-go-package": "github.com/iAmPlus/hotels/models"
    },
    "register": {
      "description": "Register Student",
      "type": "object",
      "properties": {
        "students": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/student"
          },
          "x-order": 1
        },
        "teacher_id": {
          "type": "string",
          "x-go-name": "teacher_id",
          "x-order": 0
        }
      },
      "x-go-package": "github.com/iAmPlus/hotels/models"
    },
    "retrieve_for_notifications": {
      "description": "Retrieve for Notifications",
      "type": "object",
      "properties": {
        "notification": {
          "type": "string",
          "x-go-name": "notification",
          "x-order": 0
        },
        "teacher_id": {
          "type": "string",
          "x-go-name": "teacher_id",
          "x-order": 1
        }
      },
      "x-go-package": "github.com/iAmPlus/hotels/models"
    },
    "student": {
      "description": "Student structure",
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "x-go-name": "student_status",
          "x-order": 2
        },
        "student_email": {
          "type": "string",
          "x-go-name": "student_email",
          "x-order": 1
        },
        "student_id": {
          "type": "string",
          "x-go-name": "student_id",
          "x-order": 0
        }
      },
      "x-go-package": "github.com/iAmPlus/hotels/models"
    },
    "suspend_students": {
      "description": "Suspend Students",
      "type": "object",
      "properties": {
        "student_id": {
          "type": "string",
          "x-go-name": "student_id",
          "x-order": 0
        }
      },
      "x-go-package": "github.com/iAmPlus/hotels/models"
    },
    "teacher": {
      "description": "Teacherr structure",
      "type": "object",
      "properties": {
        "teacher_email": {
          "type": "string",
          "x-go-name": "teacher_email",
          "x-order": 1
        },
        "teacher_id": {
          "type": "string",
          "x-go-name": "teacher_id",
          "x-order": 0
        }
      },
      "x-go-package": "github.com/iAmPlus/microservice/models"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "microservice API",
    "title": "microservice API",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/commonstudents": {
      "get": {
        "description": "Get Common Students",
        "tags": [
          "student"
        ],
        "summary": "Get Common Students",
        "operationId": "Get_Common_Students",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "teacher_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Common Students",
            "schema": {
              "$ref": "#/definitions/common_students"
            }
          },
          "400": {
            "description": "Bad request \u003cbr\u003e\n",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/liveness": {
      "get": {
        "tags": [
          "Health"
        ],
        "operationId": "Liveness",
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/readiness": {
      "get": {
        "tags": [
          "Health"
        ],
        "operationId": "Readiness",
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/register": {
      "post": {
        "description": "create Register",
        "tags": [
          "student"
        ],
        "summary": "register student",
        "operationId": "Create_Register",
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/register"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad request \u003cbr\u003e\n",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/retrievefornotifications": {
      "post": {
        "description": "retrieve_for_notifications",
        "tags": [
          "teacher"
        ],
        "summary": "Retrieve For Notifications",
        "operationId": "retrieve_for_notifications",
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/retrieve_for_notifications"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve For Notifications",
            "schema": {
              "$ref": "#/definitions/recipients"
            }
          },
          "400": {
            "description": "Bad request \u003cbr\u003e\n",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/suspend": {
      "post": {
        "description": "suspend_student",
        "tags": [
          "teacher"
        ],
        "summary": "Suspend Student(s)",
        "operationId": "suspend_student",
        "parameters": [
          {
            "type": "string",
            "name": "teacher_id",
            "in": "query"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/suspend_students"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad request \u003cbr\u003e\n",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorResponse": {
      "description": "Error response body for 4xx responses",
      "properties": {
        "code": {
          "description": "6xx if validation error.\n1000+ for special errors.\nOtherwise, normal HTTP status codes apply.\n",
          "type": "integer",
          "x-order": 0
        },
        "message": {
          "description": "Informative text - not for error checking",
          "type": "string",
          "x-order": 1
        },
        "validation": {
          "description": "Details about validation error",
          "type": "object",
          "properties": {
            "code": {
              "description": "Error code for validation error - like error_code",
              "type": "string",
              "x-order": 1
            },
            "param": {
              "description": "The parameter name which caused the error",
              "type": "string",
              "x-order": 0
            }
          },
          "x-order": 2
        }
      }
    },
    "ErrorResponseValidation": {
      "description": "Details about validation error",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code for validation error - like error_code",
          "type": "string",
          "x-order": 1
        },
        "param": {
          "description": "The parameter name which caused the error",
          "type": "string",
          "x-order": 0
        }
      },
      "x-order": 2
    },
    "common_students": {
      "description": "Register Student",
      "type": "object",
      "properties": {
        "students": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/student"
          },
          "x-order": 0
        }
      },
      "x-go-package": "github.com/iAmPlus/hotels/models"
    },
    "pagestate": {
      "type": "object",
      "properties": {
        "pageid": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "PageID",
          "x-order": 0
        },
        "pagesize": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "PageSize",
          "x-order": 1
        }
      },
      "x-go-name": "PageState"
    },
    "pagination_data": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Page",
          "x-order": 0
        },
        "perPage": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "PerPage",
          "x-order": 1
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Total",
          "x-order": 2
        },
        "totalPage": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "TotalPage",
          "x-order": 3
        }
      },
      "x-go-package": "github.com/iAmPlus/skill-news-go/common"
    },
    "recipients": {
      "description": "Recipients",
      "type": "object",
      "properties": {
        "students": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/student"
          },
          "x-order": 0
        }
      },
      "x-go-package": "github.com/iAmPlus/hotels/models"
    },
    "register": {
      "description": "Register Student",
      "type": "object",
      "properties": {
        "students": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/student"
          },
          "x-order": 1
        },
        "teacher_id": {
          "type": "string",
          "x-go-name": "teacher_id",
          "x-order": 0
        }
      },
      "x-go-package": "github.com/iAmPlus/hotels/models"
    },
    "retrieve_for_notifications": {
      "description": "Retrieve for Notifications",
      "type": "object",
      "properties": {
        "notification": {
          "type": "string",
          "x-go-name": "notification",
          "x-order": 0
        },
        "teacher_id": {
          "type": "string",
          "x-go-name": "teacher_id",
          "x-order": 1
        }
      },
      "x-go-package": "github.com/iAmPlus/hotels/models"
    },
    "student": {
      "description": "Student structure",
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "x-go-name": "student_status",
          "x-order": 2
        },
        "student_email": {
          "type": "string",
          "x-go-name": "student_email",
          "x-order": 1
        },
        "student_id": {
          "type": "string",
          "x-go-name": "student_id",
          "x-order": 0
        }
      },
      "x-go-package": "github.com/iAmPlus/hotels/models"
    },
    "suspend_students": {
      "description": "Suspend Students",
      "type": "object",
      "properties": {
        "student_id": {
          "type": "string",
          "x-go-name": "student_id",
          "x-order": 0
        }
      },
      "x-go-package": "github.com/iAmPlus/hotels/models"
    },
    "teacher": {
      "description": "Teacherr structure",
      "type": "object",
      "properties": {
        "teacher_email": {
          "type": "string",
          "x-go-name": "teacher_email",
          "x-order": 1
        },
        "teacher_id": {
          "type": "string",
          "x-go-name": "teacher_id",
          "x-order": 0
        }
      },
      "x-go-package": "github.com/iAmPlus/microservice/models"
    }
  }
}`))
}
